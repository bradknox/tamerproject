//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.05.02 at 05:14:34 PM EDT 
//


package org.rlcommunity.environments.octopus.config;


import java.util.ArrayList;
import java.util.List;

import org.rlcommunity.environments.octopus.config.ArmSpec;
import org.rlcommunity.environments.octopus.config.NodePairSpec;


/**
 * <p>Java class for ArmSpec complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ArmSpec">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="nodePair" type="{}NodePairSpec" maxOccurs="unbounded" minOccurs="2"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */

public class ArmSpec {

    protected List<NodePairSpec> nodePair;

    /**
     * Gets the value of the nodePair property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodePair property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodePair().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodePairSpec }
     * 
     * 
     */
    public List<NodePairSpec> getNodePair() {
        return this.nodePair;
    }
    
    private void addNodePair(NodeSpec upper, NodeSpec lower){
        nodePair.add(new NodePairSpec(upper,lower));
    }
    public ArmSpec(){
            nodePair = new ArrayList<NodePairSpec>();
            
            NodeSpec upper=new NodeSpec(0.675233311763865, new double[]{0.0019745749999999923, 0.4302831250000001}, new double[]{0.0d,0.0d});
            NodeSpec lower=new NodeSpec(0.675233311763865, new double[]{0.0019745749999999923, -0.4302831250000001}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);

            upper=new NodeSpec(0.675233311763865, new double[]{0.899289575, 0.42410127500000017}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.675233311763865, new double[]{0.899289575, -0.42410127500000017}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);

            
            upper=new NodeSpec(0.6689518869502691, new double[]{1.7966045750000001, 0.41791942500000023}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.6689518869502691, new double[]{1.7966045750000001, -0.41791942500000023}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);

                        
            upper=new NodeSpec(0.6627037820540759, new double[]{2.693919575, 0.4117375750000003}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.6627037820540759, new double[]{2.693919575,-0.4117375750000003}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.656489948437103, new double[]{3.5912345749999997, 0.4055557249999999}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.656489948437103, new double[]{3.5912345749999997,-0.4055557249999999}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.6503113685034645, new double[]{4.488549575, 0.399373875}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.6503113685034645, new double[]{4.488549575,-0.399373875}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.6441690566663911, new double[]{5.385864575, 0.39319202500000006}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.6441690566663911, new double[]{5.385864575, -0.39319202500000006}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.6380640603292209, new double[]{6.283179575, 0.3870101750000001}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.6380640603292209, new double[]{6.283179575,-0.3870101750000001}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.631997460878506, new double[]{7.180494575,0.3808283250000002}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.631997460878506, new double[]{7.180494575, -0.3808283250000002}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.625970374686908, new double[]{8.077809575, 0.37464647500000026}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.625970374686908, new double[]{8.077809575, -0.37464647500000026}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
            upper=new NodeSpec(0.6199839541231545, new double[]{8.975124575, 0.3684646249999999}, new double[]{0.0d,0.0d});
            lower=new NodeSpec(0.6199839541231545, new double[]{8.975124575, -0.3684646249999999}, new double[]{0.0d,0.0d});
            addNodePair(upper,lower);
            
    }
    /**
     * Code from the settings .xml competition file
    <arm>
  <nodePair>
    <upper velocity='0 0' position='0 1' mass='1' />
    <lower velocity='0 0' position='0 0' mass='1' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='1 1' mass='0.9900990099' />
    <lower velocity='0 0' position='1 0' mass='0.9900990099' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='2 1' mass='0.9803921569' />
    <lower velocity='0 0' position='2 0' mass='0.9803921569' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='3 1' mass='0.9708737864' />
    <lower velocity='0 0' position='3 0' mass='0.9708737864' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='4 1' mass='0.9615384615' />
    <lower velocity='0 0' position='4 0' mass='0.9615384615' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='5 1' mass='0.9523809524' />
    <lower velocity='0 0' position='5 0' mass='0.9523809524' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='6 1' mass='0.8433962264' />
    <lower velocity='0 0' position='6 0' mass='0.8433962264' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='7 1' mass='0.8345794393' />
    <lower velocity='0 0' position='7 0' mass='0.8345794393' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='8 1' mass='0.8259259259' />
    <lower velocity='0 0' position='8 0' mass='0.8259259259' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='9 1' mass='0.8174311927' />
    <lower velocity='0 0' position='9 0' mass='0.8174311927' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='10 1' mass='0.7090909091' />
    <lower velocity='0 0' position='10 0' mass='0.7090909091' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='11 1' mass='0.7009009009' />
    <lower velocity='0 0' position='11 0' mass='0.7009009009' />
  </nodePair>
  <nodePair>
    <upper velocity='0 0' position='12 1' mass='0.7928571429' />
    <lower velocity='0 0' position='12 0' mass='0.7928571429' />
  </nodePair>
</arm>
     */

}
